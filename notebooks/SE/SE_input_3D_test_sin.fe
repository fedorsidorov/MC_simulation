define vertex attribute vmob real

MOBILITY_TENSOR 
vmob  0     0
0     vmob  0
0     0  vmob

PARAMETER lx = 50
PARAMETER ly = 50
PARAMETER z_max = 15.0
PARAMETER angle_surface = 55
PARAMETER angle_mirror = 90
PARAMETER TENS_r = 33.5e-2
PARAMETER TENS_s = -TENS_r*cos((angle_surface)*pi/180)
PARAMETER TENS_m = -TENS_r*cos((angle_mirror)*pi/180)

/*--------------------CONSTRAINTS START--------------------*/
constraint 1
formula: z = 0

constraint 11
formula: x = -lx/2

constraint 22
formula: y = -ly/2

constraint 33
formula: x = lx/2

constraint 44
formula: y = ly/2

constraint 5 nonpositive
formula: z = z_max

/*--------------------CONSTRAINTS END--------------------*/

/*--------------------VERTICES START--------------------*/
vertices
1	-25. -25.   0.
2	-25.   -18.75   0.  
3	-25.  -12.5   0. 
4	-25.  -12.5   0. 
5	-25.    -6.25   0.  
6	-25.   0.   0.
7	-25.     6.25   0.  
8	-25.   12.5   0. 
9	-25.   12.5   0. 
10	-25.    18.75   0.  
11	-25.  25.   0.
12	 25. -25.   0.
13	 25.   -18.75   0.  
14	 25.  -12.5   0. 
15	 25.  -12.5   0. 
16	25.   -6.25  0.  
17	25.  0.  0.
18	25.    6.25  0.  
19	25.  12.5  0. 
20	25.  12.5  0. 
21	25.   18.75  0.  
22	25. 25.  0.
23	-25. -25.  15.
24	-25.   -18.75  15.  
25	-25.  -12.5  15. 
26	-25.  -12.5   5. 
27	-25.    -6.25   5.  
28	-25.   0.   5.
29	-25.     6.25   5.  
30	-25.   12.5   5. 
31	-25.   12.5  15. 
32	-25.    18.75  15.  
33	-25.  25.  15.
34	 25. -25.  15.
35	 25.   -18.75  15.  
36	 25.  -12.5  15. 
37	 25.  -12.5   5. 
38	25.   -6.25  5.  
39	25.  0.  5.
40	25.    6.25  5.  
41	25.  12.5  5. 
42	25.  12.5 15. 
43	25.   18.75 15.  
44	25. 25. 15.
/*--------------------VERTICES END--------------------*/

/*--------------------EDGES START--------------------*/
edges
1	 1 12 color red
2	 2 13 color red
3	 3 14 color red
4	 4 15 color red
5	 5 16 color red
6	 6 17 color red
7	 7 18 color red
8	 8 19 color red
9	 9 20 color red
10	10 21 color red
11	11 22 color red
12	1 2 color red
13	2 3 color red
14	3 4 color red
15	4 5 color red
16	5 6 color red
17	6 7 color red
18	7 8 color red
19	8 9 color red
20	 9 10 color red
21	10 11 color red
22	12 13 color red
23	13 14 color red
24	14 15 color red
25	15 16 color red
26	16 17 color red
27	17 18 color red
28	18 19 color red
29	19 20 color red
30	20 21 color red
31	21 22 color red
32	23 34 color red
33	24 35 color red
34	25 36 color red
35	26 37 color red
36	27 38 color red
37	28 39 color red
38	29 40 color red
39	30 41 color red
40	31 42 color red
41	32 43 color red
42	33 44 color red
43	23 24 color red
44	24 25 color red
45	25 26 color red
46	26 27 color red
47	27 28 color red
48	28 29 color red
49	29 30 color red
50	30 31 color red
51	31 32 color red
52	32 33 color red
53	34 35 color red
54	35 36 color red
55	36 37 color red
56	37 38 color red
57	38 39 color red
58	39 40 color red
59	40 41 color red
60	41 42 color red
61	42 43 color red
62	43 44 color red
63	 1 23 color red
64	 2 24 color red
65	 3 25 color red
66	 4 26 color red
67	 5 27 color red
68	 6 28 color red
69	 7 29 color red
70	 8 30 color red
71	 9 31 color red
72	10 32 color red
73	11 33 color red
74	12 34 color red
75	13 35 color red
76	14 36 color red
77	15 37 color red
78	16 38 color red
79	17 39 color red
80	18 40 color red
81	19 41 color red
82	20 42 color red
83	21 43 color red
84	22 44 color red
/*--------------------EDGES END--------------------*/

/*--------------------FACES START--------------------*/
faces
1	 12   2 -22  -1
2	 13   3 -23  -2
3	 14   4 -24  -3
4	 15   5 -25  -4
5	 16   6 -26  -5
6	 17   7 -27  -6
7	 18   8 -28  -7
8	 19   9 -29  -8
9	 20  10 -30  -9
10	 21  11 -31 -10
11	 32  53 -33 -43
12	 33  54 -34 -44
13	 34  55 -35 -45
14	 35  56 -36 -46
15	 36  57 -37 -47
16	 37  58 -38 -48
17	 38  59 -39 -49
18	 39  60 -40 -50
19	 40  61 -41 -51
20	 41  62 -42 -52
21	  1  74 -32 -63
22	 73  42 -84 -11
23	 63  43 -64 -12
24	 64  44 -65 -13
25	 65  45 -66 -14
26	 66  46 -67 -15
27	 67  47 -68 -16
28	 68  48 -69 -17
29	 69  49 -70 -18
30	 70  50 -71 -19
31	 71  51 -72 -20
32	 72  52 -73 -21
33	 22  75 -53 -74
34	 23  76 -54 -75
35	 24  77 -55 -76
36	 25  78 -56 -77
37	 26  79 -57 -78
38	 27  80 -58 -79
39	 28  81 -59 -80
40	 29  82 -60 -81
41	 30  83 -61 -82
42	 31  84 -62 -83
/*--------------------FACES END--------------------*/

/*--------------------BODIES START--------------------*/
bodies
1	1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 	volume 25000.0

/*--------------------BODIES END--------------------*/

/*--------------------SIMULATION START--------------------*/
read

defmob_1 := {foreach vertex vv do set vv vmob 1}

//defmob_y := {
//	foreach vertex vv do set vv vmob 1 + exp(5 * exp(-vv.y^2 / 30))
//	}

//loopit := {g50; w 0.0005; w 0.0005; V}

set_no_refine := {
	foreach edge ee do {
		cnt := 0;
		foreach ee.vertices vv do {
			if vv.x == -lx/2 then cnt := cnt - 1;
			if vv.x == lx/2 then cnt := cnt + 1
			};
		if abs(cnt) == 2 and ee color == red and ee y != 0 then set ee no_refine
		};
		foreach edge ee do {set ee.color black};
	}

set_v_constraint_1 := {
	foreach vertex vv do {if vv.z == 0 then set vv constraint 1}
	}

set_v_constraint_5 := {
	foreach vertex vv do {if vv.z == z_max then set vv constraint 5}
	}

set_v_constraints_11_33 := {
	foreach vertex vv do {
		if vv.x = -lx/2 then set vv constraint 11;
		if vv.x = lx/2 then set vv constraint 33;
		}
	}

set_v_constraints_22_44 := {
	foreach vertex vv do {
		if vv.y = -ly/2 then set vv constraint 22;
		if vv.y = ly/2 then set vv constraint 44;
		}
	}

set_e_constraint_1 := {
	foreach edge ee do {
		cnt := 0;
		foreach ee.vertices vv do {
			if vv.z == 0 then cnt := cnt + 1
			};
		if cnt == 2 then set ee constraint 1
		};
	}

set_e_constraint_11_33 := {
	foreach edge ee do {
		cnt := 0;
		foreach ee.vertices vv do {
			if vv.x == -lx/2 then cnt := cnt - 1;
			if vv.x == lx/2 then cnt := cnt + 1
			};
		if cnt == -2 then set ee constraint 11;
		if cnt == 2 then set ee constraint 33
		};
	}

set_e_constraint_22_44 := {
	foreach edge ee do {
		cnt := 0;
		foreach ee.vertices vv do {
			if vv.y == -ly/2 then cnt := cnt - 1;
			if vv.y == ly/2 then cnt := cnt + 1
			};
		if cnt == -2 then set ee constraint 22;
		if cnt == 2 then set ee constraint 44
		};
	}

set_f_tension_resist := {foreach facet ff do {set ff tension TENS_r}}

set_f_tension_surface := {
	foreach facet ff do {
		cnt := 0;
		foreach ff.vertices vv do {
			if vv.z == 0 then cnt := cnt + 1
			};
		if cnt == 3 then set ff tension TENS_s
		}
	}

set_f_tension_mirror := {
	foreach facet ff do {
		cnt := 0;
		foreach ff.vertices vv do {
			if vv.x == -lx/2 then cnt := cnt - 1;
			if vv.x == lx/2 then cnt := cnt + 1
			};
		if abs(cnt) == 3 then set ff tension TENS_m;
		};
	foreach facet ff do {
		cnt := 0;
		foreach ff.vertices vv do {
			if vv.y == -ly/2 then cnt := cnt - 1;
			if vv.y == ly/2 then cnt := cnt + 1
			};
		if abs(cnt) == 3 then set ff tension TENS_m;
		}
	}

color_TENS_m_faces := {set facet color brown where tension == TENS_m}

color_TENS_s_faces := {set facet color cyan where tension == TENS_s}

color_TENS_r_faces := {set facet color yellow where tension == TENS_r}

prepare_save := {
	printf "" >>> "/Users/fedor/PycharmProjects/MC_simulation/notebooks/SE/vlist.txt";
	}

prepare_surface := {
	set_no_refine;
	set_v_constraint_1;
	set_v_constraints_11_33;
	set_v_constraints_22_44;
	set_e_constraint_1;
	set_e_constraint_11_33;
	set_e_constraint_22_44;
	set_f_tension_resist;
	set_f_tension_surface;
	set_f_tension_mirror;
	color_TENS_m_faces;
	color_TENS_s_faces;
	color_TENS_r_faces;
	area_normalization;
	defmob_1;
	prepare_save
	}

loopit := {g10; w 0.01; w 0.01; V}

save := {
	foreach vertex do {
		if x < lx/2 then if x > -lx/2 then printf "%f %f %f\n", x, y, z >> "/Users/fedor/PycharmProjects/MC_simulation/notebooks/SE/vlist.txt";
		}
	}

ebash := {
	prepare_surface;
	m 0.0001;
	cnt := 0;
	save;
	printf "%f %f %f\n", total_time, -100., -100. >> "vlist.txt";
	while cnt < 1000 do {
		loopit 5;
		save;
		printf "%f %f %f\n", total_time, -100., -100. >> "vlist.txt";
		cnt := cnt + 1;
		print cnt;
		};
	}
